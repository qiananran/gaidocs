import{_ as l,o as e,c as r,x as a,a as i,t as n,U as o}from"./chunks/framework.7f50b160.js";const g=JSON.parse('{"title":"VLAN","description":"","frontmatter":{"title":"VLAN"},"headers":[],"relativePath":"netexam/base/aboutVlan.md","lastUpdated":null}'),h={name:"netexam/base/aboutVlan.md"},d={id:"frontmatter-title",tabindex:"-1"},s=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),c=o('<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>随着网络中计算机数量越来越多，传统的以太网络开始面临广播泛滥以及安全性无法保障等各种问题。<br> VLAN（Virtual Local Area Network）即虚拟局域网，是将一个物理的局域网在逻辑上划分成多个广播域的技术。通过在交换机上配置VLAN,可以实现在同一VLAN内的用户可以进行二层互访，而不同VLAN间的用户被二层隔离，这样既能够隔离广播域，又能够提升网络的安全性。</p><h2 id="在vlan之前" tabindex="-1">在VLAN之前 <a class="header-anchor" href="#在vlan之前" aria-label="Permalink to &quot;在VLAN之前&quot;">​</a></h2><ul><li>交换机的所有接口属于一个广播域，往往也是一个逻辑子网;</li><li>用户无法根据业务需要灵活的在交换机上进行广播域的隔离;</li><li>随着网络规模越来越大，数量越来越多，广播风暴将给网络带来重大问题。</li></ul><h2 id="vlan" tabindex="-1">VLAN <a class="header-anchor" href="#vlan" aria-label="Permalink to &quot;VLAN&quot;">​</a></h2><h3 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h3><ul><li>将一个物理局域网在逻辑上划分成多个广播域</li><li>1Vlan = 1广播域 = 1子网 （划分最好一个子网一个VLAN）</li><li>广播不会在不同VLAN间转发，而是限制在相同的VLAN中</li><li>不同VLAN之间的设备默认无法通信</li></ul><h3 id="vlan-范围" tabindex="-1">VLAN 范围 <a class="header-anchor" href="#vlan-范围" aria-label="Permalink to &quot;VLAN 范围&quot;">​</a></h3><p>VLAN 范围：0～4095 （0和4095保留，1为默认）</p><h3 id="目的" tabindex="-1">目的 <a class="header-anchor" href="#目的" aria-label="Permalink to &quot;目的&quot;">​</a></h3><p>划分VLAN,将广播域范围减小</p><ul><li>vlan（Virtual LAN）技术提供了一种灵活的解决方案;</li><li>将交换机的接口根据业务需要添加到不同的VLAN中，从而实现二层隔离。</li></ul><h3 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h3><ul><li>有效控制广播域范围</li><li>增强局域网的安全性</li><li>灵活构建虚拟工作组</li><li>简化网络管理</li></ul><h3 id="vlan划分-基于端口最常见" tabindex="-1">VLAN划分：基于端口最常见 <a class="header-anchor" href="#vlan划分-基于端口最常见" aria-label="Permalink to &quot;VLAN划分：基于端口最常见&quot;">​</a></h3><p><img src="https://photohosting.oss-cn-hangzhou.aliyuncs.com/captures/net/vlan.png" alt=""></p><h3 id="vlan标签" tabindex="-1">VLAN标签 <a class="header-anchor" href="#vlan标签" aria-label="Permalink to &quot;VLAN标签&quot;">​</a></h3><p><img src="https://photohosting.oss-cn-hangzhou.aliyuncs.com/captures/net/vlan.png" alt=""></p><p>IEEE 802.1q：又称dot1q，是VLAN的正式标准，对Ethernet帧格式进行修改，在源Mac地址字段和协议类型字段中插入了4字节的802.1q Tag<br> 每台支持802.1q协议的交换机发送的数据帧都会包含VLAN ID，以指明数据帧属于哪一个VLAN。因此，在一个VLAN交换网络中，以太网帧有以下两种格式</p><table><thead><tr><th>**无标记帧（untagged frame） **</th><th><strong>原始的数据帧，未加入4字节802.1q tag的字段</strong></th></tr></thead><tbody><tr><td>有标记帧（tagged frame）</td><td>插入了4字节802.1q tag的字段</td></tr></tbody></table><p>路由器和终端设备发送的数据帧默认是untagged frame，默认也识别不了tagged frame</p><h3 id="vlan-链路类型" tabindex="-1">VLAN 链路类型 <a class="header-anchor" href="#vlan-链路类型" aria-label="Permalink to &quot;VLAN 链路类型&quot;">​</a></h3><table><thead><tr><th>**Access Link  **</th><th><strong>接入链路一般用于连接主机或路由器之间的链路接入链路上传输的帧都是untagged帧</strong></th></tr></thead><tbody><tr><td>Trunk Link</td><td>干道/中继链路一般用于交换机间的互连或交换机与路由器之间的链路干道链路上传输的帧几乎都是tagged帧用于两端识别</td></tr></tbody></table><p><img src="https://photohosting.oss-cn-hangzhou.aliyuncs.com/captures/net/vlan1.png" alt=""></p><h3 id="pvid" tabindex="-1">PVID <a class="header-anchor" href="#pvid" aria-label="Permalink to &quot;PVID&quot;">​</a></h3><p>PVID: Port Vlan identification 端口缺省VLAN 指明该端口属于VLAN</p><ul><li>即Port VLAN ID，代表端口的缺省VLAN</li><li>X7系列的交换机每个端口PVID=1</li></ul><h3 id="vlan-端口类型" tabindex="-1">VLAN 端口类型： <a class="header-anchor" href="#vlan-端口类型" aria-label="Permalink to &quot;VLAN 端口类型：&quot;">​</a></h3><p>Access接入端口</p><ul><li>用于连接主机收到数据后会添加VLAN Tag，VLAN ID和端口的PVID相同</li><li>转发数据前会移除VLAN Tag</li><li>注意：终端设备（PC）发出和接收的都是untagged的帧，否则无法识别 通俗解释：<br> 交换机每个接口有PVID，默认PVID=1，可以修改。 当接口为Access模式时：</li><li>收到未打标签（untagged）的帧会添加接口的PVID</li><li>收到打标签（tagged）的帧会直接修改为tagged帧的VLAN Tag</li><li>发帧时统一剥离VLAN Tag（Untagged）并与发送接口的PVID比较，一致转发不一致丢弃</li></ul><p>Trunk干道端口</p><ul><li>用于连接交换机或路由器</li><li>收到帧时：如果该帧不包含Tag，将打上端口的PVID；</li><li>如果该帧包含Tag，则不改变。</li><li>发送帧时：首先要保证该帧的VLAN ID在Trunk的允许发送列表中（华为默认只允许VLAN1，思科默认允许所有VLAN）</li><li>若与端口的PVID相同时，则剥离Tag发送；</li><li>若与端口的PVID不同时，则直接发送。</li></ul><p>通俗解释:<br> 交换机每个接口有PVID，默认PVID=1，可以修改。 接口为Trunk模式时：</p><ul><li>收到未打标签的帧，将打上端口的PVID（和access模式一样）</li><li>收到打标签的帧，则不改变直接转发</li><li>发送帧时，先检查该帧VLAN ID在Trunk的允许发送列表</li><li>若发送的帧与端口的PVID相同，剥离Tag发送；（和access模式一样）</li><li>若与端口的PVID不同时，则直接发送。</li></ul><p>Hybrid混杂端口</p><ul><li>既可以连接主机，又可以连接其他交换机。</li><li>既可以连接接入链路又可以连接干道链路。</li><li>允许多个VLAN的帧通过，并可以在出接口方向将某些VLAN帧的Tag剥离掉（由命令决定） 通俗解释<br></li><li>交换机每个接口有PVID，默认PVID=1，可以修改。</li><li>可以任意指定数据帧发送或接收是否携带tagged</li><li>接口属于混杂模式，既可以是Trunk又可以是Acess</li><li>收帧时既可以打上标签（Access），也可以直接转发带标签的帧（Trunk）</li><li>发帧时既可以直接转发带标签的帧（Trunk），也可以剥离标签（Acess）</li></ul><h4 id="配置hybrid" tabindex="-1">配置Hybrid <a class="header-anchor" href="#配置hybrid" aria-label="Permalink to &quot;配置Hybrid&quot;">​</a></h4><p><img src="https://photohosting.oss-cn-hangzhou.aliyuncs.com/captures/net/Screenshot%202023-04-07at19-52-07.png" alt=""> 交换机之间的g0/0/1口可以打标签也可以不打标签，打标签就是Trunk模式，不打就是Acess模式<br> 即 port hybrid tagged vlan 2 3 100这条命令可以不写 <img src="https://photohosting.oss-cn-hangzhou.aliyuncs.com/captures/net/Screenshot%202023-04-07at19-52-07.png" alt=""></p><h3 id="交换机判断vlan的逻辑" tabindex="-1">交换机判断Vlan的逻辑 <a class="header-anchor" href="#交换机判断vlan的逻辑" aria-label="Permalink to &quot;交换机判断Vlan的逻辑&quot;">​</a></h3><p><img src="https://photohosting.oss-cn-hangzhou.aliyuncs.com/captures/net/Screenshot%202023-04-07at20-05-13.png" alt=""></p><h3 id="vlan-命令" tabindex="-1">VLAN 命令 <a class="header-anchor" href="#vlan-命令" aria-label="Permalink to &quot;VLAN 命令&quot;">​</a></h3><table><thead><tr><th>命令</th><th>备注</th></tr></thead><tbody><tr><td>vlan 10</td><td>创建单个VLAN</td></tr><tr><td>vlan batch 10 to 20</td><td>创建多个VLAN</td></tr><tr><td>port link-type access<br>port link-type trunk<br>port link-type hybrid</td><td>配置接口类型<br>简写为P L A、P L T、P L H</td></tr><tr><td>port default vlan 10</td><td>配置access关联的VLAN/PVID,简写 P D V 10</td></tr><tr><td>port trunk allow-pass vlan 10</td><td>配置Trunk允许通过的VLAN，简写P L A V 10<br>华为默认只允许VLAN1</td></tr><tr><td>port trunk pvid vlan 10</td><td>配置Trunk的PVID</td></tr><tr><td>port hybrid tagged vlan 10<br>port hybrid untagged vlan 10</td><td>配置Hybird标记VLAN（标记和剥离）</td></tr><tr><td>port hybrid pvid vlan 10</td><td>配置Hybird的PVID</td></tr><tr><td>display vlan</td><td>验证VLAN</td></tr><tr><td>display port vlan 10</td><td>验证VLAN</td></tr></tbody></table><h2 id="交换机的工作原理" tabindex="-1">交换机的工作原理： <a class="header-anchor" href="#交换机的工作原理" aria-label="Permalink to &quot;交换机的工作原理：&quot;">​</a></h2><p><img src="https://photohosting.oss-cn-hangzhou.aliyuncs.com/captures/net/Screenshot%202023-04-07at20-10-40.png" alt=""></p><h3 id="前言-1" tabindex="-1">前言 <a class="header-anchor" href="#前言-1" aria-label="Permalink to &quot;前言&quot;">​</a></h3><p>部署了VLAN的传统交换机不能实现不同VLAN间的二层报文转发，因此必须引入陆游技术来实现不同VLAN间的通信，VLAN路由可以通过二层交换机配合路由器来实现，也可以通过三层交换机来实现。</p><h3 id="vlan-间的通信限制" tabindex="-1">VLAN 间的通信限制 <a class="header-anchor" href="#vlan-间的通信限制" aria-label="Permalink to &quot;VLAN 间的通信限制&quot;">​</a></h3><p>每一个VLAN都是独立的广播域,不同VLAN之间隔离，因此不同VLAN的节点之间是无法直接访问。</p><h3 id="vlan-间通信方法-路由" tabindex="-1">VLAN 间通信方法（路由） <a class="header-anchor" href="#vlan-间通信方法-路由" aria-label="Permalink to &quot;VLAN 间通信方法（路由）&quot;">​</a></h3><p>使用路由器完成不同VLAN通信，（缺点：每一个VLAN就需要绑定一个物理接口）<br></p><p>单臂路由</p><ul><li>将交换机和路由器之间配置为Trunk链路，并且在路由器上创建子接口以支持VLAN陆游</li></ul><div class="danger custom-block"><p class="custom-block-title">交换机设置为Trunk,路由器如何识别VLAN</p><p>dot1q termination vid 10 作用 该子接口与vlan 10 绑定，受到VLAN10就剥离VLAN,查看路由表执行路由转发，转发在打上转发接口的PVID</p></div><p>路由器一般用作出口设备（广播域太大），且价格较为昂贵，使用路由器实现VLAN间通信不经济</p><p>使用具有路由功能的交换机实现VLAN间通信</p><h2 id="vlan-配置" tabindex="-1">VLAN 配置 <a class="header-anchor" href="#vlan-配置" aria-label="Permalink to &quot;VLAN 配置&quot;">​</a></h2><p><img src="https://photohosting.oss-cn-hangzhou.aliyuncs.com/captures/net/Screenshot%202023-04-07at21-11-33.png" alt=""></p>',57);function u(t,p,V,A,b,L){return e(),r("div",null,[a("h1",d,[i(n(t.$frontmatter.title)+" ",1),s]),c])}const m=l(h,[["render",u]]);export{g as __pageData,m as default};
